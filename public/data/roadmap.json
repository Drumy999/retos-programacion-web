[
    {
        "title": "#00 SINTAXIS, VARIABLES, TIPOS DE DATOS Y HOLA MUNDO",
        "code": [
            "/*",
            " * ¿Preparad@ para aprender o repasar el lenguaje de programación que tú quieras?",
            " * - Recuerda que todas las instrucciones de participación están en el",
            " *   repositorio de GitHub.",
            " *",
            " * Lo primero... ¿Ya has elegido un lenguaje?",
            " * - No todos son iguales, pero sus fundamentos suelen ser comunes.",
            " * - Este primer reto te servirá para familiarizarte con la forma de participar",
            " *   enviando tus propias soluciones.",
            " *",
            " * EJERCICIO:",
            " * - Crea un comentario en el código y coloca la URL del sitio web oficial del",
            " *   lenguaje de programación que has seleccionado.",
            " * - Representa las diferentes sintaxis que existen de crear comentarios",
            " *   en el lenguaje (en una línea, varias...).",
            " * - Crea una variable (y una constante si el lenguaje lo soporta).",
            " * - Crea variables representando todos los tipos de datos primitivos",
            " *   del lenguaje (cadenas de texto, enteros, booleanos...).",
            " * - Imprime por terminal el texto: \"¡Hola, [y el nombre de tu lenguaje]!\"",
            " *",
            " * ¿Fácil? No te preocupes, recuerda que esta es una ruta de estudio y",
            " * debemos comenzar por el principio.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/00%20-%20SINTAXIS%2C%20VARIABLES%2C%20TIPOS%20DE%20DATOS%20Y%20HOLA%20MUNDO/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/00%20-%20SINTAXIS%2C%20VARIABLES%2C%20TIPOS%20DE%20DATOS%20Y%20HOLA%20MUNDO/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/00%20-%20SINTAXIS%2C%20VARIABLES%2C%20TIPOS%20DE%20DATOS%20Y%20HOLA%20MUNDO/",
        "video": "https://youtu.be/gEIBJ7rmLa0",
        "level": 1,
        "date": "26/12/2023"
    },
    {
        "title": "#01 OPERADORES Y ESTRUCTURAS DE CONTROL",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * - Crea ejemplos utilizando todos los tipos de operadores de tu lenguaje:",
            " *   Aritméticos, lógicos, de comparación, asignación, identidad, pertenencia, bits...",
            " *   (Ten en cuenta que cada lenguaje puede poseer unos diferentes)",
            " * - Utilizando las operaciones con operadores que tú quieras, crea ejemplos",
            " *   que representen todos los tipos de estructuras de control que existan",
            " *   en tu lenguaje:",
            " *   Condicionales, iterativas, excepciones...",
            " * - Debes hacer print por consola del resultado de todos los ejemplos.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea un programa que imprima por consola todos los números comprendidos",
            " * entre 10 y 55 (incluidos), pares, y que no son ni el 16 ni múltiplos de 3.",
            " *",
            " * Seguro que al revisar detenidamente las posibilidades has descubierto algo nuevo.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/01%20-%20OPERADORES%20Y%20ESTRUCTURAS%20DE%20CONTROL/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/01%20-%20OPERADORES%20Y%20ESTRUCTURAS%20DE%20CONTROL/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/01%20-%20OPERADORES%20Y%20ESTRUCTURAS%20DE%20CONTROL/",
        "video": "https://youtu.be/DLSGCh9jdes",
        "level": 1,
        "date": "02/01/2024"
    },
    {
        "title": "#02 FUNCIONES Y ALCANCE",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * - Crea ejemplos de funciones básicas que representen las diferentes",
            " *   posibilidades del lenguaje:",
            " *   Sin parámetros ni retorno, con uno o varios parámetros, con retorno...",
            " * - Comprueba si puedes crear funciones dentro de funciones.",
            " * - Utiliza algún ejemplo de funciones ya creadas en el lenguaje.",
            " * - Pon a prueba el concepto de variable LOCAL y GLOBAL.",
            " * - Debes hacer print por consola del resultado de todos los ejemplos.",
            " *   (y tener en cuenta que cada lenguaje puede poseer más o menos posibilidades)",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea una función que reciba dos parámetros de tipo cadena de texto y retorne un número.",
            " * - La función imprime todos los números del 1 al 100. Teniendo en cuenta que:",
            " *   - Si el número es múltiplo de 3, muestra la cadena de texto del primer parámetro.",
            " *   - Si el número es múltiplo de 5, muestra la cadena de texto del segundo parámetro.",
            " *   - Si el número es múltiplo de 3 y de 5, muestra las dos cadenas de texto concatenadas.",
            " *   - La función retorna el número de veces que se ha impreso el número en lugar de los textos.",
            " *",
            " * Presta especial atención a la sintaxis que debes utilizar en cada uno de los casos.",
            " * Cada lenguaje sigue una convenciones que debes de respetar para que el código se entienda.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/02%20-%20FUNCIONES%20Y%20ALCANCE/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/02%20-%20FUNCIONES%20Y%20ALCANCE/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/02%20-%20FUNCIONES%20Y%20ALCANCE/",
        "video": "https://youtu.be/auxClgiX6UM",
        "level": 1,
        "date": "08/01/2024"
    },
    {
        "title": "#03 ESTRUCTURAS DE DATOS",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * - Muestra ejemplos de creación de todas las estructuras soportadas por defecto",
            " *   en tu lenguaje.",
            " * - Utiliza operaciones de inserción, borrado, actualización y ordenación.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea una agenda de contactos por terminal.",
            " * - Debes implementar funcionalidades de búsqueda, inserción, actualización",
            " *   y eliminación de contactos.",
            " * - Cada contacto debe tener un nombre y un número de teléfono.",
            " * - El programa solicita en primer lugar cuál es la operación que se quiere realizar,",
            " *   y a continuación los datos necesarios para llevarla a cabo.",
            " * - El programa no puede dejar introducir números de teléfono no númericos y con más",
            " *   de 11 dígitos (o el número de dígitos que quieras).",
            " * - También se debe proponer una operación de finalización del programa.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/03%20-%20ESTRUCTURAS%20DE%20DATOS/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/03%20-%20ESTRUCTURAS%20DE%20DATOS/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/03%20-%20ESTRUCTURAS%20DE%20DATOS/",
        "video": "https://youtu.be/brxtPtUbU7M",
        "level": 2,
        "date": "15/01/2024"
    },
    {
        "title": "#04 CADENAS DE CARACTERES",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Muestra ejemplos de todas las operaciones que puedes realizar con cadenas de caracteres",
            " * en tu lenguaje. Algunas de esas operaciones podrían ser (busca todas las que puedas):",
            " * - Acceso a caracteres específicos, subcadenas, longitud, concatenación, repetición,",
            " *   recorrido, conversión a mayúsculas y minúsculas, reemplazo, división, unión,",
            " *   interpolación, verificación...",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea un programa que analice dos palabras diferentes y realice comprobaciones",
            " * para descubrir si son:",
            " * - Palíndromos",
            " * - Anagramas",
            " * - Isogramas",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/04%20-%20CADENAS%20DE%20CARACTERES/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/04%20-%20CADENAS%20DE%20CARACTERES/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/04%20-%20CADENAS%20DE%20CARACTERES/",
        "video": "https://youtu.be/CKzY7nHwulA",
        "level": 2,
        "date": "22/01/2024"
    },
    {
        "title": "#05 VALOR Y REFERENCIA",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * - Muestra ejemplos de asignación de variables \"por valor\" y \"por referencia\", según",
            " *   su tipo de dato.",
            " * - Muestra ejemplos de funciones con variables que se les pasan \"por valor\" y ",
            " *   \"por referencia\", y cómo se comportan en cada caso en el momento de ser modificadas.",
            " * (Entender estos conceptos es algo esencial en la gran mayoría de lenguajes)",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea dos programas que reciban dos parámetros (cada uno) definidos como",
            " * variables anteriormente.",
            " * - Cada programa recibe, en un caso, dos parámetros por valor, y en otro caso, por referencia.",
            " *   Estos parámetros los intercambia entre ellos en su interior, los retorna, y su retorno",
            " *   se asigna a dos variables diferentes a las originales. A continuación, imprime",
            " *   el valor de las variables originales y las nuevas, comprobando que se ha invertido",
            " *   su valor en las segundas.",
            " *   Comprueba también que se ha conservado el valor original en las primeras.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/05%20-%20VALOR%20Y%20REFERENCIA/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/05%20-%20VALOR%20Y%20REFERENCIA/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/05%20-%20VALOR%20Y%20REFERENCIA/",
        "video": "https://youtu.be/P2OQDT9Wrb0",
        "level": 1,
        "date": "29/01/2024"
    },
    {
        "title": "#06 RECURSIVIDAD",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Entiende el concepto de recursividad creando una función recursiva que imprima",
            " * números del 100 al 0.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Utiliza el concepto de recursividad para:",
            " * - Calcular el factorial de un número concreto (la función recibe ese número).",
            " * - Calcular el valor de un elemento concreto (según su posición) en la ",
            " *   sucesión de Fibonacci (la función recibe la posición).",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/06%20-%20RECURSIVIDAD/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/06%20-%20RECURSIVIDAD/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/06%20-%20RECURSIVIDAD/",
        "video": "https://youtu.be/nTfDkLRrYiM",
        "level": 3,
        "date": "05/02/2024"
    },
    {
        "title": "#07 PILAS Y COLAS",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Implementa los mecanismos de introducción y recuperación de elementos propios de las",
            " * pilas (stacks - LIFO) y las colas (queue - FIFO) utilizando una estructura de array",
            " * o lista (dependiendo de las posibilidades de tu lenguaje).",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * - Utilizando la implementación de pila y cadenas de texto, simula el mecanismo adelante/atrás",
            " *   de un navegador web. Crea un programa en el que puedas navegar a una página o indicarle",
            " *   que te quieres desplazar adelante o atrás, mostrando en cada caso el nombre de la web.",
            " *   Las palabras \"adelante\", \"atrás\" desencadenan esta acción, el resto se interpreta como",
            " *   el nombre de una nueva web.",
            " * - Utilizando la implementación de cola y cadenas de texto, simula el mecanismo de una",
            " *   impresora compartida que recibe documentos y los imprime cuando así se le indica.",
            " *   La palabra \"imprimir\" imprime un elemento de la cola, el resto de palabras se",
            " *   interpretan como nombres de documentos.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/07%20-%20PILAS%20Y%20COLAS/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/07%20-%20PILAS%20Y%20COLAS/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/07%20-%20PILAS%20Y%20COLAS/",
        "video": "https://youtu.be/cBeRWS2X0CA",
        "level": 2,
        "date": "12/02/2024"
    },
    {
        "title": "#08 CLASES",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el concepto de clase y crea un ejemplo que implemente un inicializador,",
            " * atributos y una función que los imprima (teniendo en cuenta las posibilidades",
            " * de tu lenguaje).",
            " * Una vez implementada, créala, establece sus parámetros, modifícalos e imprímelos",
            " * utilizando su función.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Implementa dos clases que representen las estructuras de Pila y Cola (estudiadas",
            " * en el ejercicio número 7 de la ruta de estudio)",
            " * - Deben poder inicializarse y disponer de operaciones para añadir, eliminar,",
            " *   retornar el número de elementos e imprimir todo su contenido.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/08%20-%20CLASES/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/08%20-%20CLASES/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/08%20-%20CLASES/",
        "video": "https://youtu.be/W4tv8WUbum4",
        "level": 1,
        "date": "19/02/2024"
    },
    {
        "title": "#09 HERENCIA Y POLIMORFISMO",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el concepto de herencia según tu lenguaje. Crea un ejemplo que",
            " * implemente una superclase Animal y un par de subclases Perro y Gato,",
            " * junto con una función que sirva para imprimir el sonido que emite cada Animal.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Implementa la jerarquía de una empresa de desarrollo formada por Empleados que",
            " * pueden ser Gerentes, Gerentes de Proyectos o Programadores.",
            " * Cada empleado tiene un identificador y un nombre.",
            " * Dependiendo de su labor, tienen propiedades y funciones exclusivas de su",
            " * actividad, y almacenan los empleados a su cargo.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/09%20-%20HERENCIA/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/09%20-%20HERENCIA/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/09%20-%20HERENCIA/",
        "video": "https://youtu.be/PVBs5PWjedA",
        "level": 2,
        "date": "26/02/2024"
    },
    {
        "title": "#10 EXCEPCIONES",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el concepto de manejo de excepciones según tu lenguaje.",
            " * Fuerza un error en tu código, captura el error, imprime dicho error",
            " * y evita que el programa se detenga de manera inesperada.",
            " * Prueba a dividir \"10/0\" o acceder a un índice no existente",
            " * de un listado para intentar provocar un error.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea una función que sea capaz de procesar parámetros, pero que también",
            " * pueda lanzar 3 tipos diferentes de excepciones (una de ellas tiene que",
            " * corresponderse con un tipo de excepción creada por nosotros de manera",
            " * personalizada, y debe ser lanzada de manera manual) en caso de error.",
            " * - Captura todas las excepciones desde el lugar donde llamas a la función.",
            " * - Imprime el tipo de error.",
            " * - Imprime si no se ha producido ningún error.",
            " * - Imprime que la ejecución ha finalizado.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/10%20-%20EXCEPCIONES/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/10%20-%20EXCEPCIONES/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/10%20-%20EXCEPCIONES/",
        "video": "https://youtu.be/mfOzfj-BrQo",
        "level": 2,
        "date": "04/03/2024"
    },
    {
        "title": "#11 MANEJO DE FICHEROS",
        "code": [
            "/*",
            " * IMPORTANTE: Sólo debes subir el fichero de código como parte del ejercicio.",
            " *",
            " * EJERCICIO:",
            " * Desarrolla un programa capaz de crear un archivo que se llame como",
            " * tu usuario de GitHub y tenga la extensión .txt.",
            " * Añade varias líneas en ese fichero:",
            " * - Tu nombre.",
            " * - Edad.",
            " * - Lenguaje de programación favorito.",
            " * Imprime el contenido.",
            " * Borra el fichero.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Desarrolla un programa de gestión de ventas que almacena sus datos en un ",
            " * archivo .txt.",
            " * - Cada producto se guarda en una línea del archivo de la siguiente manera:",
            " *   [nombre_producto], [cantidad_vendida], [precio].",
            " * - Siguiendo ese formato, y mediante terminal, debe permitir añadir, consultar,",
            " *   actualizar, eliminar productos y salir.",
            " * - También debe poseer opciones para calcular la venta total y por producto.",
            " * - La opción salir borra el .txt.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/11%20-%20MANEJO%20DE%20FICHEROS/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/11%20-%20MANEJO%20DE%20FICHEROS/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/11%20-%20MANEJO%20DE%20FICHEROS/",
        "video": "https://youtu.be/Bsiay2nax4Y",
        "level": 2,
        "date": "11/03/2024"
    },
    {
        "title": "#12 JSON Y XML",
        "code": [
            "/*",
            " * IMPORTANTE: Sólo debes subir el fichero de código como parte del ejercicio.",
            " *",
            " * EJERCICIO:",
            " * Desarrolla un programa capaz de crear un archivo XML y JSON que guarde los",
            " * siguientes datos (haciendo uso de la sintaxis correcta en cada caso):",
            " * - Nombre",
            " * - Edad",
            " * - Fecha de nacimiento",
            " * - Listado de lenguajes de programación",
            " * Muestra el contenido de los archivos.",
            " * Borra los archivos.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Utilizando la lógica de creación de los archivos anteriores, crea un",
            " * programa capaz de leer y transformar en una misma clase custom de tu ",
            " * lenguaje los datos almacenados en el XML y el JSON.",
            " * Borra los archivos.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/12%20-%20JSON%20Y%20XML/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/12%20-%20JSON%20Y%20XML/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/12%20-%20JSON%20Y%20XML/",
        "video": "https://youtu.be/OwStihBItEg",
        "level": 3,
        "date": "18/03/2024"
    },
    {
        "title": "#13 PRUEBAS UNITARIAS",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Crea una función que se encargue de sumar dos números y retornar",
            " * su resultado.",
            " * Crea un test, utilizando las herramientas de tu lenguaje, que sea",
            " * capaz de determinar si esa función se ejecuta correctamente.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea un diccionario con las siguientes claves y valores:",
            " * \"name\": \"Tu nombre\"",
            " * \"age\": \"Tu edad\"",
            " * \"birth_date\": \"Tu fecha de nacimiento\"",
            " * \"programming_languages\": [\"Listado de lenguajes de programación\"]",
            " * Crea dos test:",
            " * - Un primero que determine que existen todos los campos.",
            " * - Un segundo que determine que los datos introducidos son correctos.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/13%20-%20PRUEBAS%20UNITARIAS/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/13%20-%20PRUEBAS%20UNITARIAS/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/13%20-%20PRUEBAS%20UNITARIAS/",
        "video": "https://youtu.be/3WFQ2grp0h0",
        "level": 1,
        "date": "25/03/2024"
    },
    {
        "title": "#14 FECHAS",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Crea dos variables utilizando los objetos fecha (date, o semejante) de tu lenguaje:",
            " * - Una primera que represente la fecha (día, mes, año, hora, minuto, segundo) actual.",
            " * - Una segunda que represente tu fecha de nacimiento (te puedes inventar la hora).",
            " * Calcula cuántos años han transcurrido entre ambas fechas.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Utilizando la fecha de tu cumpleaños, formatéala y muestra su resultado de",
            " * 10 maneras diferentes. Por ejemplo:",
            " * - Día, mes y año.",
            " * - Hora, minuto y segundo.",
            " * - Día de año.",
            " * - Día de la semana.",
            " * - Nombre del mes.",
            " * (lo que se te ocurra...)",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/14%20-%20FECHAS/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/14%20-%20FECHAS/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/14%20-%20FECHAS/",
        "video": "https://youtu.be/EQIAhF7NNMI",
        "level": 1,
        "date": "01/04/2024"
    },
    {
        "title": "#15 ASINCRONÍA",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Utilizando tu lenguaje, crea un programa capaz de ejecutar de manera",
            " * asíncrona una función que tardará en finalizar un número concreto de",
            " * segundos parametrizables. También debes poder asignarle un nombre.",
            " * La función imprime su nombre, cuándo empieza, el tiempo que durará",
            " * su ejecución y cuando finaliza.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Utilizando el concepto de asincronía y la función anterior, crea",
            " * el siguiente programa que ejecuta en este orden:",
            " * - Una función C que dura 3 segundos.",
            " * - Una función B que dura 2 segundos.",
            " * - Una función A que dura 1 segundo.",
            " * - Una función D que dura 1 segundo.",
            " * - Las funciones C, B y A se ejecutan en paralelo.",
            " * - La función D comienza su ejecución cuando las 3 anteriores han finalizado.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/15%20-%20ASINCRONÍA/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/15%20-%20ASINCRONÍA/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/15%20-%20ASINCRONÍA/",
        "video": "https://youtu.be/YA8Ssd3AUwA",
        "level": 3,
        "date": "08/04/2024"
    },
    {
        "title": "#16 EXPRESIONES REGULARES",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Utilizando tu lenguaje, explora el concepto de expresiones regulares,",
            " * creando una que sea capaz de encontrar y extraer todos los números",
            " * de un texto.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea 3 expresiones regulares (a tu criterio) capaces de:",
            " * - Validar un email.",
            " * - Validar un número de teléfono.",
            " * - Validar una url.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/16%20-%20EXPRESIONES%20REGULARES/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/16%20-%20EXPRESIONES%20REGULARES/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/16%20-%20EXPRESIONES%20REGULARES/",
        "video": "https://youtu.be/0L7IfEF19ow",
        "level": 2,
        "date": "15/04/2024"
    },
    {
        "title": "#17 ITERACIONES",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Utilizando tu lenguaje, emplea 3 mecanismos diferentes para imprimir",
            " * números del 1 al 10 mediante iteración.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Escribe el mayor número de mecanismos que posea tu lenguaje",
            " * para iterar valores. ¿Eres capaz de utilizar 5? ¿Y 10?",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/17%20-%20ITERACIONES/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/17%20-%20ITERACIONES/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/17%20-%20ITERACIONES/",
        "video": "https://youtu.be/X1ROaPH_ci8",
        "level": 1,
        "date": "22/04/2024"
    },
    {
        "title": "#18 CONJUNTOS",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Utilizando tu lenguaje crea un conjunto de datos y realiza las siguientes",
            " * operaciones (debes utilizar una estructura que las soporte):",
            " * - Añade un elemento al final.",
            " * - Añade un elemento al principio.",
            " * - Añade varios elementos en bloque al final.",
            " * - Añade varios elementos en bloque en una posición concreta.",
            " * - Elimina un elemento en una posición concreta.",
            " * - Actualiza el valor de un elemento en una posición concreta.",
            " * - Comprueba si un elemento está en un conjunto.",
            " * - Elimina todo el contenido del conjunto.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Muestra ejemplos de las siguientes operaciones con conjuntos:",
            " * - Unión.",
            " * - Intersección.",
            " * - Diferencia.",
            " * - Diferencia simétrica.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/18%20-%20CONJUNTOS/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/18%20-%20CONJUNTOS/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/18%20-%20CONJUNTOS/",
        "video": "https://youtu.be/0auuM4GROVA",
        "level": 1,
        "date": "29/04/2024"
    },
    {
        "title": "#19 ENUMERACIONES",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Empleando tu lenguaje, explora la definición del tipo de dato",
            " * que sirva para definir enumeraciones (Enum).",
            " * Crea un Enum que represente los días de la semana del lunes",
            " * al domingo, en ese orden. Con ese enumerado, crea una operación",
            " * que muestre el nombre del día de la semana dependiendo del número entero",
            " * utilizado (del 1 al 7).",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea un pequeño sistema de gestión del estado de pedidos.",
            " * Implementa una clase que defina un pedido con las siguientes características:",
            " * - El pedido tiene un identificador y un estado.",
            " * - El estado es un Enum con estos valores: PENDIENTE, ENVIADO, ENTREGADO y CANCELADO.",
            " * - Implementa las funciones que sirvan para modificar el estado:",
            " *   - Pedido enviado",
            " *   - Pedido cancelado",
            " *   - Pedido entregado",
            " *   (Establece una lógica, por ejemplo, no se puede entregar si no se ha enviado, etc...)",
            " * - Implementa una función para mostrar un texto descriptivo según el estado actual.",
            " * - Crea diferentes pedidos y muestra cómo se interactúa con ellos. ",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/19%20-%20ENUMERACIONES/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/19%20-%20ENUMERACIONES/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/19%20-%20ENUMERACIONES/",
        "video": "https://youtu.be/VibRVNBo-uI",
        "level": 2,
        "date": "06/05/2024"
    },
    {
        "title": "#20 PETICIONES HTTP",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Utilizando un mecanismo de peticiones HTTP de tu lenguaje, realiza",
            " * una petición a la web que tú quieras, verifica que dicha petición",
            " * fue exitosa y muestra por consola el contenido de la web.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Utilizando la PokéAPI (https://pokeapi.co), crea un programa por",
            " * terminal al que le puedas solicitar información de un Pokémon concreto",
            " * utilizando su nombre o número.",
            " * - Muestra el nombre, id, peso, altura y tipo(s) del Pokémon",
            " * - Muestra el nombre de su cadena de evoluciones",
            " * - Muestra los juegos en los que aparece",
            " * - Controla posibles errores",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/20%20-%20PETICIONES%20HTTP/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/20%20-%20PETICIONES%20HTTP/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/20%20-%20PETICIONES%20HTTP/",
        "video": "https://youtu.be/-pYMoPYSkgM",
        "level": 3,
        "date": "13/05/2024"
    },
    {
        "title": "#21 CALLBACKS",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el concepto de callback en tu lenguaje creando un ejemplo",
            " * simple (a tu elección) que muestre su funcionamiento.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea un simulador de pedidos de un restaurante utilizando callbacks.",
            " * Estará formado por una función que procesa pedidos.",
            " * Debe aceptar el nombre del plato, una callback de confirmación, una",
            " * de listo y otra de entrega.",
            " * - Debe imprimir un confirmación cuando empiece el procesamiento.",
            " * - Debe simular un tiempo aleatorio entre 1 a 10 segundos entre",
            " *   procesos.",
            " * - Debe invocar a cada callback siguiendo un orden de procesado.",
            " * - Debe notificar que el plato está listo o ha sido entregado.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/21%20-%20CALLBACKS/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/21%20-%20CALLBACKS/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/21%20-%20CALLBACKS/",
        "video": "https://youtu.be/tqQo9SjJFlY",
        "level": 2,
        "date": "20/05/2024"
    },
    {
        "title": "#22 FUNCIONES DE ORDEN SUPERIOR",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el concepto de funciones de orden superior en tu lenguaje ",
            " * creando ejemplos simples (a tu elección) que muestren su funcionamiento.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Dada una lista de estudiantes (con sus nombres, fecha de nacimiento y ",
            " * lista de calificaciones), utiliza funciones de orden superior para",
            " * realizar las siguientes operaciones de procesamiento y análisis:",
            " * - Promedio calificaciones: Obtiene una lista de estudiantes por nombre",
            " *   y promedio de sus calificaciones.",
            " * - Mejores estudiantes: Obtiene una lista con el nombre de los estudiantes",
            " *   que tienen calificaciones con un 9 o más de promedio.",
            " * - Nacimiento: Obtiene una lista de estudiantes ordenada desde el más joven.",
            " * - Mayor calificación: Obtiene la calificación más alta de entre todas las",
            " *   de los alumnos.",
            " * - Una calificación debe estar comprendida entre 0 y 10 (admite decimales).",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/22%20-%20FUNCIONES%20DE%20ORDEN%20SUPERIOR/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/22%20-%20FUNCIONES%20DE%20ORDEN%20SUPERIOR/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/22%20-%20FUNCIONES%20DE%20ORDEN%20SUPERIOR/",
        "video": "https://youtu.be/ABniGtbqAXk",
        "level": 3,
        "date": "27/05/2024"
    },
    {
        "title": "#23 PATRONES DE DISEÑO: SINGLETON",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el patrón de diseño \"singleton\" y muestra cómo crearlo",
            " * con un ejemplo genérico.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Utiliza el patrón de diseño \"singleton\" para representar una clase que",
            " * haga referencia a la sesión de usuario de una aplicación ficticia.",
            " * La sesión debe permitir asignar un usuario (id, username, nombre y email),",
            " * recuperar los datos del usuario y borrar los datos de la sesión.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/23%20-%20SINGLETON/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/23%20-%20SINGLETON/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/23%20-%20SINGLETON/",
        "video": "https://youtu.be/cOIcFo_w9hA",
        "level": 2,
        "date": "03/06/2024"
    },
    {
        "title": "#24 PATRONES DE DISEÑO: DECORADORES",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el concepto de \"decorador\" y muestra cómo crearlo",
            " * con un ejemplo genérico.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea un decorador que sea capaz de contabilizar cuántas veces",
            " * se ha llamado a una función y aplícalo a una función de tu elección.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/24%20-%20DECORADORES/ejercicio.md",
        "solution": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/24%20-%20DECORADORES/python/mouredev.py",
        "community": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/24%20-%20DECORADORES/",
        "video": "https://youtube.com/@mouredevtv",
        "video_title": "Muy pronto",
        "level": 1,
        "date": "10/06/2024"
    },
    {
        "title": "#25 LOGS",
        "code": [
            "/*",
            " * EJERCICIO:",
            " * Explora el concepto de \"logging\" en tu lenguaje. Configúralo y muestra",
            " * un ejemplo con cada nivel de \"severidad\" disponible.",
            " *",
            " * DIFICULTAD EXTRA (opcional):",
            " * Crea un programa ficticio de gestión de tareas que permita añadir, eliminar",
            " * y listar dichas tareas.",
            " * - Añadir: recibe nombre y descripción.",
            " * - Eliminar: por nombre de la tarea.",
            " * Implementa diferentes mensajes de log que muestren información según la",
            " * tarea ejecutada (a tu elección).",
            " * Utiliza el log para visualizar el tiempo de ejecución de cada tarea.",
            " */"
        ],
        "url": "https://github.com/mouredev/roadmap-retos-programacion/blob/main/Roadmap/25%20-%20LOGS/ejercicio.md",
        "level": 1,
        "date": "17/06/2024",
        "event": "https://discord.gg/GM4fgP8V?event=1249918242370355262"
    },
    {
        "title": "#26 CORRECCIÓN Y NUEVO EJERCICIO",
        "code": [
            "/*",
            " * Se publicará una vez finalizada la corrección en directo del ejercicio anterior.",
            " */"
        ],
        "date": "24/06/2024",
        "event": "https://discord.gg/GM4fgP8V?event=1249918242370355262"
    }
]